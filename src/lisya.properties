# Define SciTE settings for lisya

file.patterns.lisya=*.lisya

filter.lisya=LISYA (lisya)|$(file.patterns.lisya)|


lexer.$(file.patterns.lisya)=lisp


# lisya operators
keywords.$(file.patterns.lisya)=and append block \
break case cond const continue default elt \
exception filter for goto if if-nil last let \
map or pop procedure push quote set stack \
structure structure-as val var when while \
record record-as \
then else ins debug exception macro macro-symbol

word.chars.lisya=$(chars.alpha)$(chars.numeric)_-<>.#+@$%^&=*!?
word.characters.$(file.patterns.lisya)=$(word.chars.lisya)



comment.block.lisya=;
comment.box.start.lisya=;;
comment.box.middle.lisya=;;
comment.box.end.lisya=;;


# LISYA styles

# Default
style.lisya.32=$(font.base)
# White space
style.lisya.0=fore:#808080
# Line Comment
style.lisya.1=$(colour.code.comment.box),$(font.code.comment.box)
# Number
style.lisya.2=$(colour.number)
# Keyword
style.lisya.3=$(colour.keyword),bold
# String
style.lisya.6=$(colour.string)
# Operators
style.lisya.10=$(colour.operator),bold
# Identifiers
style.lisya.9=
# End of line where string is not closed
style.lisya.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
# Matched Operators
style.lisya.34=fore:#0000FF,bold
style.lisya.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.lisya.style=10


command.go.$(file.patterns.lisya)=lisya $(FilePath)
command.go.subsystem.$(file.patterns.lisya)=0
